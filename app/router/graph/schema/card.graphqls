type Card {
  id: ID!

  """
  Deck ID
  """
  deckId: ID!

  """
  英単語・フレーズ
  """
  question: String!

  """
  解答・意味のマークダウン文字列
  """
  answer: String!
  """
  AIが生成した解答・意味のマークダウン文字列
  """
  aiAnswer: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  """
  学習スケジュール
  """
  schedule: CardSchedule
}

input CardsWhere {
  deckId: ID!
  """
  Querstionの曖昧検索
  大文字小文字を区別せずに部分一致検索を行う
  """
  q: String
}

input CardsInput {
  where: CardsWhere!
  limit: Int = 100
  offset: Int = 0
}

type CardsOutput {
  cards: [Card!]!
  pageInfo: PageInfo!
}

input PendingCardsWhere {
  deckId: ID!
}

input PendingCardsInput {
  where: PendingCardsWhere!
  limit: Int = 100
  offset: Int = 0
}

type PendingCardsOutput {
  cards: [Card!]!
}

extend type Query {
  """
  Card一覧
  最大100件取得可能
  """
  cards(input: CardsInput): CardsOutput! @hasRole(role: USER)

  """
  CardをIDで取得
  """
  card(id: ID!): Card! @hasRole(role: USER)

  """
  学習すべきCard一覧
  最大100件取得可能
  """
  pendingCards(input: PendingCardsInput): PendingCardsOutput!
    @hasRole(role: USER)
}

input CreateCardInput {
  deckId: ID!
  question: String!
  answer: String
}

type CreateCardOutput {
  card: Card!
}

extend type Mutation {
  """
  Card作成
  Freeプランは1000件までしか作成できない
  """
  createCard(input: CreateCardInput!): CreateCardOutput! @hasRole(role: USER)
}
